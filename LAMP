#!/bin/bash
# Copyright (c) 2022 Kazmer GECZI-KULCSAR <zamiere@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

###############################################################################
#
# WSL LAMP Stack Install Script for Ubuntu Focal
#
###############################################################################

# Install WSL with:
# Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux
# as Administrator in PowerShell.
#
# If you hit enter, the system will REBOOT IMMEDIATELY!
#
# Open PowerShell again as Administrator, download and install Ubuntu 20.04 with following lines:
# Invoke-WebRequest -Uri https://aka.ms/wslubuntu2004 -OutFile Ubuntu.appx -UseBasicParsing
# Add-AppxPackage ubuntu.appx
#
# or install "Ubuntu" from Microsoft Store.
#
# On Windows 11 run
# wsl --set-default-version 1
# as administrator in PowerShell
#
# Start Ubuntu from Start Menu and set up your local Ubuntu user as "web" with password "password" 
#
# You can run the following parts as a script or line-by-line in wsl shell (Ubuntu from Start Menu)
#
# Add web user to sudoers for using sudo without password
sudo sh -c "echo \"web ALL=NOPASSWD: ALL\" > /etc/sudoers.d/web"

# Upgrade
sudo apt update -y
sudo apt upgrade -y

# Install mc
sudo apt install mc -y

# Install apache and php
sudo apt install apache2 php php-mbstring php-xml php-mysql php-sqlite3 php-curl php-gd php-common php-intl php-zip -y

# Install gulp
sudo apt install gulp -y

# Install mariadb
sudo apt install mariadb-server -y

# Set password
sudo mysqld_safe --skip-grant-tables &
sleep 5
mysql -u root -t <<EOF
USE mysql;
UPDATE user SET authentication_string=PASSWORD("password") WHERE User='root';
UPDATE user SET plugin="mysql_native_password" WHERE User='root';
FLUSH PRIVILEGES; 
EOF
sudo sed -i 's/password = .*/password = password/g' /etc/mysql/debian.cnf
sudo kill -9 $(pgrep mysql)

# Set max_heap_table_size
sudo tee /etc/mysql/conf.d/max_heap_table_size.cnf <<EOF >/dev/null
[mysqld]
max_heap_table_size=128M
EOF

# Set default charset to utf8_hungarian
sudo tee /etc/mysql/conf.d/utf8_hungarian.cnf <<EOF >/dev/null
[client]
default-character-set=utf8

[mysql]
default-character-set=utf8

[mysqld]
collation-server = utf8_hungarian_ci
init-connect='SET NAMES utf8'
character-set-server = utf8
EOF

# Start mysql
sudo service mysql start

# Install phpmyadmin
sudo apt install phpmyadmin -y
# While configuring the package, leave unselected the apache and lighttpd checkboxes and set default mysql password to 'password'.

# Build ssh keys and enable ssh login
sudo ssh-keygen -A
sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sudo service ssh start

# Create symlink to webdev folder in your home dir
sudo ln -s /mnt/c/Users/$(/mnt/c/Windows/System32/cmd.exe /c "echo %HOMEPATH%" | sed -E s/'^.+\\([^\\]*)\r$'/'\1'/)/Web /srv/http

# Enable apahe
sudo update-rc.d apache2 enable
sudo tee /etc/apache2/sites-available/001-dev.conf <<EOF >/dev/null
<Directory /srv>
    Options FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>

Include /srv/http/_sites/*
EOF

sudo a2dissite 000-default
sudo a2ensite 001-dev
sudo a2enmod php7.4
sudo a2enmod rewrite
sudo service apache2 stop
sudo service apache2 start

# Autostart
sudo cp /srv/http/start_lamp.vbe /mnt/c/Users/$(/mnt/c/Windows/System32/cmd.exe /c "echo %HOMEPATH%" | sed -E s/'^.+\\([^\\]*)\r$'/'\1'/)/AppData/Roaming/Microsoft/Windows/Start\ Menu/Programs/Startup/wsl_start.vbe

# Usage
#
# You can open http://localhost in your browser and you must see phpinfo() output.
#
# You can add more project folders as "projectname.test" into your Web folder.
# Add your config to _sites in your Web folder, see example file for further instructions.
#
# You must add appropriate host entry
# "127.0.0.1 projectname.test"
# into c:\Windows\System32\drivers\etc\hosts file.
#
# Restart apache with 
# "sudo service apache2 restart"
# in wsl shell.
#
# Now you can access it at http://projectname.test in your browser.
#
